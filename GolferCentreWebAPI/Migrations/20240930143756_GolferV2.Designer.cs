// <auto-generated />
using System;
using GolferCentreWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GolferCentreWebAPI.Migrations
{
    [DbContext(typeof(GolferGoContext))]
    [Migration("20240930143756_GolferV2")]
    partial class GolferV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GolferCentreWebAPI.Models.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Par")
                        .HasColumnType("int");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__C92D7187211242A1");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Golfer", b =>
                {
                    b.Property<Guid>("GolferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GolferID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GolferImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Handicap")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GolferId")
                        .HasName("PK__Golfer__DB1FA05C294F7370");

                    b.ToTable("Golfer", (string)null);
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Score", b =>
                {
                    b.Property<Guid>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScoreID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CourseID");

                    b.Property<Guid>("GolferId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GolferID");

                    b.Property<DateOnly>("RoundDate")
                        .HasColumnType("date");

                    b.Property<int>("Score1")
                        .HasColumnType("int")
                        .HasColumnName("Score");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TournamentID");

                    b.HasKey("ScoreId")
                        .HasName("PK__Score__7DD229F18A19048B");

                    b.HasIndex("CourseId");

                    b.HasIndex("GolferId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Score", (string)null);
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Tournament", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TournamentID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TournamentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TournamentId")
                        .HasName("PK__Tourname__AC631333EF9B05D6");

                    b.ToTable("Tournament", (string)null);
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACFC28008C");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4A2B52848")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053414FABF26")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Score", b =>
                {
                    b.HasOne("GolferCentreWebAPI.Models.Course", "Course")
                        .WithMany("Scores")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Course_Score");

                    b.HasOne("GolferCentreWebAPI.Models.Golfer", "Golfer")
                        .WithMany("Scores")
                        .HasForeignKey("GolferId")
                        .IsRequired()
                        .HasConstraintName("FK_Golfer_Score");

                    b.HasOne("GolferCentreWebAPI.Models.Tournament", "Tournament")
                        .WithMany("Scores")
                        .HasForeignKey("TournamentId")
                        .IsRequired()
                        .HasConstraintName("FK_Tournament_Score");

                    b.Navigation("Course");

                    b.Navigation("Golfer");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Course", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Golfer", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("GolferCentreWebAPI.Models.Tournament", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
